import 'dart:math' as math;

import 'package:qreki_dart/src/constants/constants.dart';

double longitudeOfMoon(double t) {
  // Calculates the longitude of the moon

  // Calculation of perturbation terms
  double th = 0.0;
  double ang;
  for (var entry in [
    [2322131.0, 191.0, 0.0003],
    [4067.0, 70.0, 0.0003],
    [549197.0, 220.0, 0.0003],
    [1808933.0, 58.0, 0.0003],
    [349472.0, 337.0, 0.0003],
    [381404.0, 354.0, 0.0003],
    [958465.0, 340.0, 0.0003],
    [12006.0, 187.0, 0.0004],
    [39871.0, 223.0, 0.0004],
    [509131.0, 242.0, 0.0005],
    [1745069.0, 24.0, 0.0005],
    [1908795.0, 90.0, 0.0005],
    [2258267.0, 156.0, 0.0006],
    [111869.0, 38.0, 0.0006],
    [27864.0, 127.0, 0.0007],
    [485333.0, 186.0, 0.0007],
    [405201.0, 50.0, 0.0007],
    [790672.0, 114.0, 0.0007],
    [1403732.0, 98.0, 0.0008],
    [858602.0, 129.0, 0.0009],
    [1920802.0, 186.0, 0.0011],
    [1267871.0, 249.0, 0.0012],
    [1856938.0, 152.0, 0.0016],
    [401329.0, 274.0, 0.0018],
    [341337.0, 16.0, 0.0021],
    [71998.0, 85.0, 0.0021],
    [990397.0, 357.0, 0.0021],
    [818536.0, 151.0, 0.0022],
    [922466.0, 163.0, 0.0023],
    [99863.0, 122.0, 0.0024],
    [1379739.0, 17.0, 0.0026],
    [918399.0, 182.0, 0.0027],
    [1934.0, 145.0, 0.0028],
    [541062.0, 259.0, 0.0037],
    [1781068.0, 21.0, 0.0038],
    [133.0, 29.0, 0.0040],
    [1844932.0, 56.0, 0.0040],
    [1331734.0, 283.0, 0.0040],
    [481266.0, 205.0, 0.0050],
    [31932.0, 107.0, 0.0052],
    [926533.0, 323.0, 0.0068],
    [449334.0, 188.0, 0.0079],
    [826671.0, 111.0, 0.0085],
    [1431597.0, 315.0, 0.0100],
    [1303870.0, 246.0, 0.0107],
    [489205.0, 142.0, 0.0110],
    [1443603.0, 52.0, 0.0125],
    [75870.0, 41.0, 0.0154],
    [513197.9, 222.5, 0.0304],
    [445267.1, 27.9, 0.0347],
    [441199.8, 47.4, 0.0409],
    [854535.2, 148.2, 0.0458],
    [1367733.1, 280.7, 0.0533],
    [377336.3, 13.2, 0.0571],
    [63863.5, 124.2, 0.0588],
    [966404.0, 276.5, 0.1144],
    [35999.05, 87.53, 0.1851],
    [954397.74, 179.93, 0.2136],
    [890534.22, 145.7, 0.6583],
    [413335.35, 10.74, 1.2740],
    [477198.868, 44.963, 6.2888],
  ]) {
    ang = (entry[0] * t + entry[1]) % 360.0;
    th += entry[2] * math.cos(kDegToRad * ang);
  }

  // Calculation of proportional term
  ang = (481267.8809 * t) % 360.0;
  ang = (ang + 218.3162) % 360.0;
  th = (th + ang) % 360.0;

  return th;
}
